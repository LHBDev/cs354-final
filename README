Name1:	Ruben Baeza
EID1:	rb27735

Name2: Ken Grimes
EID2: ksg634

http://www.maa.org/external_archive/joma/Volume8/Kalman/MaxEllipse.html

Didn't get around to finishing moving vertices. have clicking working but didn't push
because cOde wasn'tworking since i triedto do moving.

scene_manager.cpp has an empty loadFile function you should write.  i'll get all the
math done tonight if i can.  running kind of low on time.

once that's done, just focus on getting a right-click menu in there that we can select
parsed files from.  as long as we can pop up a bunch of models and move verts and
spin angles and shit we'll be fine.

look back through scene_manager.h, GLM integration changed a lot of things.

sample file format (or whatever is easiest to do):
i'm thinking that doing something like a .obj file will be easiest here.
first, define the group of verts
second, define the group of lines
third, define the group of angles
finally, define the group of fanos

each type of element depends on the previous, so identifying previous
iterations is probably the hardest part.

So I was thinking something like this:

[Vertexes]
#V0 a b c
#V1 a b c
#V2 a b c

[Lines]
#L0 0 1
#L1 0 2
#L2 1 2

[Angles]
#A0 0 1
#A1 0 2
#A2 1 3

[Fano]
#F0 0 1 2


So a real example might be:
V0 5.5 5.0 4.5
V1 4.5 5.0 5.5
V2 5.0 4.0 5.0
L0 0 1
L1 0 2
L2 1 2
A0 0 1
A1 0 2
A2 1 3
F0 0 1 2


So the parser would begin reading lines, and for each vertex (starting with V, with GLfloat data),
then read in the Lines with a number corresponding to the above verts that are its components,
then read in angles - with its data being two enumerated lines,
then read in fanos, which have 3 angles for components.

you'll have to keep track of what order you read in and create the objects for lines, angles, and
fanos.  but i included a very easy way to look up verts by the order they came in (scene->vertexes[i]
is an array of references to everything added with addVertex or addVertex3f/4f in the order they
were added.  it should help speed up the process somewhat.


MAKEFILE updates:
it's now multiplatform, and has new rules:

make
-just makes everything with -Wall

make debug
-compiles with gdb info

make run
-runs after compiling

make clean
-cleans up shit
